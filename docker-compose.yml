version: '0.7'
services:
  db:
    build: ./db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - db-network
    volumes:
      - data-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
    networks:
      - db-network
      - backend-network
    depends_on:
      db:
        condition: service_healthy

  streamlit:
    build: ./api
    environment:
      ENDPOINT_URL: ${ENDPOINT_URL}
    networks:
      - backend-network
    depends_on:
      - backend
    ports:
      - "80:80"

networks:
  db-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  data-volume:
